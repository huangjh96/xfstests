#! /bin/bash
# FSQA Test No. 018
#
# Test hardlink breakage
#
# This simple test demonstrates a known issue with overlayfs:
# - file A and B are hardlinked in lower
# - modify A to trigger copy up
# - file A is no longer a hardlink of file B
#
#-----------------------------------------------------------------------
#
# Copyright (C) 2016 CTERA Networks. All Rights Reserved.
# Author: Amir Goldstein <amir73il@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc.,  51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#-----------------------------------------------------------------------
#

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

tmp=/tmp/$$
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs overlay
_supported_os Linux
_require_scratch

rm -f $seqres.full

_scratch_mkfs >>$seqres.full 2>&1

# Create 2 hardlinked files in lower
lowerdir=$OVL_BASE_SCRATCH_MNT/$OVL_LOWER
mkdir -p $lowerdir
echo "patient zero" >> $lowerdir/foo
ln $lowerdir/foo $lowerdir/bar


_scratch_mount


rm -f $tmp.before $tmp.after

foo=$SCRATCH_MNT/foo
bar=$SCRATCH_MNT/bar

# Record inode number and nlink before copy up
ls -li $foo $bar | awk '{ print $1, $3 }' > $tmp.before

# Modify content of one of the hardlinks
echo "mutated" >> $foo

# Record inode number and nlink after copy up
ls -li $foo $bar | awk '{ print $1, $3 }' > $tmp.after

# Compare ino/nlink before..after - expect silence
diff $tmp.before $tmp.after

# Compare content of files - expect silence
diff $foo $bar

echo "Silence is golden"
status=0
exit
